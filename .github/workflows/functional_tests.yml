name: Functional tests

on:
  workflow_run:
    workflows: ['Build binary']
    types:
      - completed

jobs:
  functional_tests:
    name: Run functional tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        golang: [1.16, 1.17]

      fail-fast: true

    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_binary.yml
          workflow_conclusion: success
          name: ${{ format('federator-{0}', runner.os) }}
          path: bin/
          repo: ${{github.repository}}

      - name: Run "functional tests"
        run: |
          ./bin/federator-${{ runner.os }} link --role-arn ${{ secrets.ASSUME_ROLE_ARN }}
          ./bin/federator-${{ runner.os }} link --role-arn ${{ secrets.ASSUME_ROLE_ARN }} --region $ANOTHER_AWS_REGION
          ./bin/federator-${{ runner.os }} link --role-arn ${{ secrets.ASSUME_ROLE_ARN }} --json
          ./bin/federator-${{ runner.os }} creds --role-arn ${{ secrets.ASSUME_ROLE_ARN }}
          ./bin/federator-${{ runner.os }} creds --role-arn ${{ secrets.ASSUME_ROLE_ARN }} --region $ANOTHER_AWS_REGION
          ./bin/federator-${{ runner.os }} creds --role-arn ${{ secrets.ASSUME_ROLE_ARN }} --json
          ./bin/federator-${{ runner.os }} trust-policy --arn arn:aws:iam::000000000000:user/myUser --external-id "test external id"
          ./bin/federator-${{ runner.os }} trust-policy --arn arn:aws:iam::000000000000:user/myUser --external-id "test external id" --json
          ./bin/federator-${{ runner.os }} trust-policy --account-id 000000000000 --external-id "test external id"
          ./bin/federator-${{ runner.os }} trust-policy --account-id 000000000000 --external-id "test external id" --json
          ./bin/federator-${{ runner.os }} --help
          ./bin/federator-${{ runner.os }} --version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-2'
          ANOTHER_AWS_REGION: 'us-east-2'
          CI_MODE: true
